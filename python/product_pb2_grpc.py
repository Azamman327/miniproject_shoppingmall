# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import product_pb2 as product__pb2


class ProductInfoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.signUp = channel.unary_unary(
                '/ProductInfo/signUp',
                request_serializer=product__pb2.UserInfo.SerializeToString,
                response_deserializer=product__pb2.UserId.FromString,
                )
        self.login = channel.unary_unary(
                '/ProductInfo/login',
                request_serializer=product__pb2.UserInfo.SerializeToString,
                response_deserializer=product__pb2.UserId.FromString,
                )
        self.createProduct = channel.unary_unary(
                '/ProductInfo/createProduct',
                request_serializer=product__pb2.Product.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.findByCategory = channel.unary_unary(
                '/ProductInfo/findByCategory',
                request_serializer=product__pb2.CategoryId.SerializeToString,
                response_deserializer=product__pb2.ProductList.FromString,
                )
        self.buyProduct = channel.unary_unary(
                '/ProductInfo/buyProduct',
                request_serializer=product__pb2.Buy.SerializeToString,
                response_deserializer=product__pb2.Empty.FromString,
                )
        self.findByName = channel.unary_unary(
                '/ProductInfo/findByName',
                request_serializer=product__pb2.ProductName.SerializeToString,
                response_deserializer=product__pb2.Product.FromString,
                )
        self.getPurchase = channel.unary_unary(
                '/ProductInfo/getPurchase',
                request_serializer=product__pb2.UserId.SerializeToString,
                response_deserializer=product__pb2.PurchaseList.FromString,
                )
        self.getCategory = channel.unary_unary(
                '/ProductInfo/getCategory',
                request_serializer=product__pb2.Empty.SerializeToString,
                response_deserializer=product__pb2.CategoryList.FromString,
                )
        self.getProductList = channel.unary_unary(
                '/ProductInfo/getProductList',
                request_serializer=product__pb2.Empty.SerializeToString,
                response_deserializer=product__pb2.ProductList.FromString,
                )


class ProductInfoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def signUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findByCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPurchase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProductList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductInfoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'signUp': grpc.unary_unary_rpc_method_handler(
                    servicer.signUp,
                    request_deserializer=product__pb2.UserInfo.FromString,
                    response_serializer=product__pb2.UserId.SerializeToString,
            ),
            'login': grpc.unary_unary_rpc_method_handler(
                    servicer.login,
                    request_deserializer=product__pb2.UserInfo.FromString,
                    response_serializer=product__pb2.UserId.SerializeToString,
            ),
            'createProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.createProduct,
                    request_deserializer=product__pb2.Product.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'findByCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.findByCategory,
                    request_deserializer=product__pb2.CategoryId.FromString,
                    response_serializer=product__pb2.ProductList.SerializeToString,
            ),
            'buyProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.buyProduct,
                    request_deserializer=product__pb2.Buy.FromString,
                    response_serializer=product__pb2.Empty.SerializeToString,
            ),
            'findByName': grpc.unary_unary_rpc_method_handler(
                    servicer.findByName,
                    request_deserializer=product__pb2.ProductName.FromString,
                    response_serializer=product__pb2.Product.SerializeToString,
            ),
            'getPurchase': grpc.unary_unary_rpc_method_handler(
                    servicer.getPurchase,
                    request_deserializer=product__pb2.UserId.FromString,
                    response_serializer=product__pb2.PurchaseList.SerializeToString,
            ),
            'getCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.getCategory,
                    request_deserializer=product__pb2.Empty.FromString,
                    response_serializer=product__pb2.CategoryList.SerializeToString,
            ),
            'getProductList': grpc.unary_unary_rpc_method_handler(
                    servicer.getProductList,
                    request_deserializer=product__pb2.Empty.FromString,
                    response_serializer=product__pb2.ProductList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProductInfo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductInfo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def signUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/signUp',
            product__pb2.UserInfo.SerializeToString,
            product__pb2.UserId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/login',
            product__pb2.UserInfo.SerializeToString,
            product__pb2.UserId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/createProduct',
            product__pb2.Product.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findByCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/findByCategory',
            product__pb2.CategoryId.SerializeToString,
            product__pb2.ProductList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def buyProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/buyProduct',
            product__pb2.Buy.SerializeToString,
            product__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/findByName',
            product__pb2.ProductName.SerializeToString,
            product__pb2.Product.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPurchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/getPurchase',
            product__pb2.UserId.SerializeToString,
            product__pb2.PurchaseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/getCategory',
            product__pb2.Empty.SerializeToString,
            product__pb2.CategoryList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getProductList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductInfo/getProductList',
            product__pb2.Empty.SerializeToString,
            product__pb2.ProductList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
